@page "/waitingroom"
@using Microsoft.AspNetCore.SignalR.Client
@using QuizGame.Service.BusinessModel
@using QuizGame.Service.Interface
@inject NavigationManager Navigation
@inject IPlayerService PlayerService
@inject ProtectedSessionStorage SessionStorage
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

<h3>Waiting Room</h3>

<p>Welcome, @playerName! You are waiting for the game to start.</p>
<div>
	<h4>Current Players in the Game:</h4>
	<ul>
		@foreach (var player in playersInGame)
		{
			<li>@player</li>
		}
	</ul>
</div>
<div>
	<h4>Choose your option:</h4>
	<button @onclick="JoinTeam" class="btn btn-primary">Join a Team</button>
	<button @onclick="PlayIndividually" class="btn btn-secondary">Play Individually</button>
</div>

@code {
	private string playerName = string.Empty;
	private HubConnection? hubConnection;
	private List<string> playersInGame = new List<string>();
	private bool isConnected = false;

	protected override async Task OnInitializedAsync()
	{
		// Lấy tên người chơi từ session hoặc URL
		var result = await SessionStorage.GetAsync<string>("PlayerName");
		playerName = result.Success ? result.Value : "Player";
		Console.WriteLine($"Error connecting to SignalR: {playerName}");
		// Lấy Game Pin từ session
		var gamePinResult = await SessionStorage.GetAsync<string>("GamePin");
		var gamePin = gamePinResult.Success ? gamePinResult.Value : string.Empty;

		// Kiểm tra nếu không có GamePin thì điều hướng về trang lỗi
		if (string.IsNullOrEmpty(gamePin))
		{
			Navigation.NavigateTo("/error");
		}

		// Khởi tạo kết nối với SignalR Hub
		hubConnection = new HubConnectionBuilder()
			.WithUrl(Navigation.ToAbsoluteUri("/gamehub"))
			.Build();

		// Lắng nghe sự kiện PlayerJoined
		hubConnection.On<string>("PlayerJoined", (playerName) =>
		{
			if (isConnected)
			{
				InvokeAsync(() =>
				{
					playersInGame.Add(playerName);
					StateHasChanged();  // Cập nhật giao diện
				});
			}
		});

		// Bắt đầu kết nối với Hub
		try
		{
			await hubConnection.StartAsync();
			isConnected = true;
			// Thêm vào nhóm game
			var gamePinFromSession = await SessionStorage.GetAsync<string>("GamePin");
			if (!string.IsNullOrEmpty(gamePinFromSession.Value))
			{
				await JoinGameGroup(gamePinFromSession.Value);
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error connecting to SignalR: {ex.Message}");
			isConnected = false;
		}
	}

	private void JoinTeam()
	{
		// Điều hướng đến trang chọn đội
		Navigation.NavigateTo("/joingame/team");
	}

	private void PlayIndividually()
	{
		// Điều hướng đến trang chơi cá nhân
		Navigation.NavigateTo("/game");
	}
	// Hàm tham gia nhóm khi người chơi tham gia
	private async Task JoinGameGroup(string gamePin)
	{
		if (hubConnection is not null && isConnected)
		{
			// Gửi yêu cầu tham gia nhóm qua Hub với gamePin thực tế
			await hubConnection.SendAsync("JoinGameGroup", gamePin);
		}
		await hubConnection.SendAsync("JoinGameGroup", "GamePin");
	}

	public async ValueTask DisposeAsync()
	{
		if (hubConnection is not null)
		{
			await hubConnection.StopAsync();
			await hubConnection.DisposeAsync();
		}
	}
}